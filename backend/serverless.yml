service: uptain-challenge-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline

custom:
  stage: dev
  sstApp: ${self:custom.stage}-infrastructure

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-central-1
  lambdaHashingVersion: 20201221
  environment:
    NOTES_TABLE: !ImportValue ${self:custom.sstApp}-dynamodb-notes-table-name
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - !ImportValue ${self:custom.sstApp}-dynamodb-notes-table-arn

functions:
  createNote:
    handler: src/handlers/create-note.handler
    events:
      - http:
          path: notes
          method: post
          cors: true
  getNotes:
    handler: src/handlers/get-notes.handler
    events:
      - http:
          path: notes
          method: get
          cors: true

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
